<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="struct_g_g___coap_blockwise_response_listener_interface" kind="struct" language="C++" prot="public">
    <compoundname>GG_CoapBlockwiseResponseListenerInterface</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_g_g___coap_blockwise_response_listener_interface_1a1b672450979fcc84e704991d347eda3f" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* GG_CoapBlockwiseResponseListenerInterface::OnResponseBlock) (GG_CoapBlockwiseResponseListener *self, GG_CoapMessageBlockInfo *block_info, GG_CoapMessage *block_message)</definition>
        <argsstring>)(GG_CoapBlockwiseResponseListener *self, GG_CoapMessageBlockInfo *block_info, GG_CoapMessage *block_message)</argsstring>
        <name>OnResponseBlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Method called to notify of the (possibly partial) response.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap_blockwise.h" line="202" column="5" bodyfile="xp/coap/gg_coap_blockwise.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_g_g___coap_blockwise_response_listener_interface_1a168d742c218abf3c111527bfc1e8ed03" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* GG_CoapBlockwiseResponseListenerInterface::OnError) (GG_CoapBlockwiseResponseListener *self, GG_Result error, const char *message)</definition>
        <argsstring>)(GG_CoapBlockwiseResponseListener *self, GG_Result error, const char *message)</argsstring>
        <name>OnError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Method called when an error has occurred.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Error message text (may be NULL). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap_blockwise.h" line="212" column="5" bodyfile="xp/coap/gg_coap_blockwise.h" bodystart="212" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Interface implemented by listeners that want to be notified of CoAP blockwise responses.</para>
<para>If <computeroutput>OnError</computeroutput> is called, no other method will be called subsequently. </para>
    </detaileddescription>
    <location file="xp/coap/gg_coap_blockwise.h" line="196" column="121" bodyfile="xp/coap/gg_coap_blockwise.h" bodystart="196" bodyend="213"/>
    <listofallmembers>
      <member refid="struct_g_g___coap_blockwise_response_listener_interface_1a168d742c218abf3c111527bfc1e8ed03" prot="public" virt="non-virtual"><scope>GG_CoapBlockwiseResponseListenerInterface</scope><name>OnError</name></member>
      <member refid="struct_g_g___coap_blockwise_response_listener_interface_1a1b672450979fcc84e704991d347eda3f" prot="public" virt="non-virtual"><scope>GG_CoapBlockwiseResponseListenerInterface</scope><name>OnResponseBlock</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
