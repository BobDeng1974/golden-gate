<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="group__InputOutput" kind="group">
    <compoundname>InputOutput</compoundname>
    <title>I/O</title>
    <innerclass refid="structGG__BufferMetadata" prot="public">GG_BufferMetadata</innerclass>
    <innerclass refid="structGG__DataSinkListener" prot="public">GG_DataSinkListener</innerclass>
    <innerclass refid="structGG__DataSinkListenerInterface" prot="public">GG_DataSinkListenerInterface</innerclass>
    <innerclass refid="structGG__DataSink" prot="public">GG_DataSink</innerclass>
    <innerclass refid="structGG__DataSinkInterface" prot="public">GG_DataSinkInterface</innerclass>
    <innerclass refid="structGG__DataSource" prot="public">GG_DataSource</innerclass>
    <innerclass refid="structGG__DataSourceInterface" prot="public">GG_DataSourceInterface</innerclass>
    <innerclass refid="structGG__InputStream" prot="public">GG_InputStream</innerclass>
    <innerclass refid="structGG__InputStreamInterface" prot="public">GG_InputStreamInterface</innerclass>
    <innerclass refid="structGG__OutputStream" prot="public">GG_OutputStream</innerclass>
    <innerclass refid="structGG__OutputStreamInterface" prot="public">GG_OutputStreamInterface</innerclass>
    <innerclass refid="classGG__MemoryStream" prot="public">GG_MemoryStream</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__InputOutput_1gafefaf443db72c7e110f266a766303654" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__Errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_BufferMetadata_Clone</definition>
        <argsstring>(const GG_BufferMetadata *metadata, GG_BufferMetadata **clone)</argsstring>
        <name>GG_BufferMetadata_Clone</name>
        <param>
          <type>const <ref refid="structGG__BufferMetadata" kindref="compound">GG_BufferMetadata</ref> *</type>
          <declname>metadata</declname>
        </param>
        <param>
          <type><ref refid="structGG__BufferMetadata" kindref="compound">GG_BufferMetadata</ref> **</type>
          <declname>clone</declname>
        </param>
        <briefdescription>
<para>Clone a metadata object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>metadata</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clone</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the variable where the cloned object will be returned.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the object could be cloned, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="81" column="11" declfile="xp/common/gg_io.h" declline="81" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1gacdc03d1cfb3d68203eb1c32ccaf0ac12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_DataSinkListener_OnCanPut</definition>
        <argsstring>(GG_DataSinkListener *self)</argsstring>
        <name>GG_DataSinkListener_OnCanPut</name>
        <param>
          <type><ref refid="structGG__DataSinkListener" kindref="compound">GG_DataSinkListener</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Notify the object that it can/should call its sink&apos;s GG_DataSink_PutData method again.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="111" column="6" declfile="xp/common/gg_io.h" declline="111" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1ga0727b8f76fd9f80fdd69f6a7304c8ff9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__Errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_DataSink_PutData</definition>
        <argsstring>(GG_DataSink *self, GG_Buffer *data, const GG_BufferMetadata *metadata)</argsstring>
        <name>GG_DataSink_PutData</name>
        <param>
          <type><ref refid="structGG__DataSink" kindref="compound">GG_DataSink</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="interfaceGG__Buffer" kindref="compound">GG_Buffer</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="structGG__BufferMetadata" kindref="compound">GG_BufferMetadata</ref> *</type>
          <declname>metadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Put data to a sink. If the data is accepted, the caller may release its reference to the data passed in, since the sink will retain its own references if needed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to put. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metadata</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional metadata (may be NULL). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__Errors_1ga74ac21a451c08367bf69467eb4756490" kindref="member">GG_SUCCESS</ref> if the data was accepted by the sink, <ref refid="group__Errors_1ga2fce56428f10fb9106698ceb49b60ca9" kindref="member">GG_ERROR_WOULD_BLOCK</ref> if the sink would normally accept the data, but cannot do so at this time, in which case the caller should retry at a later time. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="structGG__DataSinkListenerInterface_1a306a7087d974223eea827b0bda5130ee" kindref="member">GG_DataSinkListenerInterface::OnCanPut</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="157" column="11" declfile="xp/common/gg_io.h" declline="157" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1ga58201b484acd2344344a7a5cd9756ad1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__Errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_DataSink_SetListener</definition>
        <argsstring>(GG_DataSink *self, GG_DataSinkListener *listener)</argsstring>
        <name>GG_DataSink_SetListener</name>
        <param>
          <type><ref refid="structGG__DataSink" kindref="compound">GG_DataSink</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="structGG__DataSinkListener" kindref="compound">GG_DataSinkListener</ref> *</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a sink&apos;s listener. The listener is called when it is appropriate to call GG_DataSink_PutData after a return value equal to <ref refid="group__Errors_1ga2fce56428f10fb9106698ceb49b60ca9" kindref="member">GG_ERROR_WOULD_BLOCK</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>listener</parametername>
</parameternamelist>
<parameterdescription>
<para>The listener for the sink. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__Errors_1ga74ac21a451c08367bf69467eb4756490" kindref="member">GG_SUCCESS</ref> if the operation succeeded, or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="161" column="11" declfile="xp/common/gg_io.h" declline="161" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1ga2ab916d109055c75274c063569554f1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__Errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_DataSource_SetDataSink</definition>
        <argsstring>(GG_DataSource *self, GG_DataSink *sink)</argsstring>
        <name>GG_DataSource_SetDataSink</name>
        <param>
          <type><ref refid="structGG__DataSource" kindref="compound">GG_DataSource</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="structGG__DataSink" kindref="compound">GG_DataSink</ref> *</type>
          <declname>sink</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the sink to which this source will send data.</para>
<para>NOTE: the lifetime of the sink passed to this method must be the same or longer than that of this object. Therefore, if that sink must be destroyed earlier than this object, the caller MUST call this method again with a NULL (or other sink) before destroying it.</para>
<para>NOTE: objects that implement this method typically call the sink&apos;s GG_DataSink::SetListener method to register themselves as a listener. In that case, the object MUST keep a reference to the sink so it can de-register itself by calling GG_DataSink::SetListener(_, NULL) prior to registering itself to a different sink and/or in its destructor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sink</parametername>
</parameternamelist>
<parameterdescription>
<para>The sink that will receive data from this object when available. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__Errors_1ga74ac21a451c08367bf69467eb4756490" kindref="member">GG_SUCCESS</ref> if the operation succeeded, or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="199" column="11" declfile="xp/common/gg_io.h" declline="199" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1gabda3f57560947b144de8b94d396adbe9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structGG__InputStream" kindref="compound">GG_InputStream</ref> *</type>
        <definition>GG_InputStream * GG_InputStream_Retain</definition>
        <argsstring>(GG_InputStream *self)</argsstring>
        <name>GG_InputStream_Retain</name>
        <param>
          <type><ref refid="structGG__InputStream" kindref="compound">GG_InputStream</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retain a reference to this object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The retained object (which may or may not be the same pointer as the one on which this method is called). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="284" column="16" declfile="xp/common/gg_io.h" declline="284" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1ga153f8e4db9f8d56ddbd483f7239f7fd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_InputStream_Release</definition>
        <argsstring>(GG_InputStream *self)</argsstring>
        <name>GG_InputStream_Release</name>
        <param>
          <type><ref refid="structGG__InputStream" kindref="compound">GG_InputStream</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Release a reference to this object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="288" column="6" declfile="xp/common/gg_io.h" declline="288" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1ga6b30fe7ee10e15552dbdf592fa7ce91c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__Errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_InputStream_Read</definition>
        <argsstring>(GG_InputStream *self, void *buffer, size_t bytes_to_read, size_t *bytes_read)</argsstring>
        <name>GG_InputStream_Read</name>
        <param>
          <type><ref refid="structGG__InputStream" kindref="compound">GG_InputStream</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bytes_to_read</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>bytes_read</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read data.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer in which the data should be read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bytes_to_read</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of bytes to read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bytes_read</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the variable in which the number of bytes read will be returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__Errors_1ga74ac21a451c08367bf69467eb4756490" kindref="member">GG_SUCCESS</ref> if at least one byte was read, <ref refid="group__InputOutput_1ga03f933b21bb40e344d742979c4b217a4" kindref="member">GG_ERROR_EOS</ref> if the end of the stream has been reached, or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="292" column="11" declfile="xp/common/gg_io.h" declline="292" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1ga3c4a579880cd08fe7ef4eb68099c09b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__Errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_InputStream_Seek</definition>
        <argsstring>(GG_InputStream *self, GG_Position offset)</argsstring>
        <name>GG_InputStream_Seek</name>
        <param>
          <type><ref refid="structGG__InputStream" kindref="compound">GG_InputStream</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="group__Types_1ga211487066e746316239c66cea030a31b" kindref="member">GG_Position</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change the current stream position, relative to the start of the stream.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Position to which to seek. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__Errors_1ga74ac21a451c08367bf69467eb4756490" kindref="member">GG_SUCCESS</ref> if the operation succeeded, or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="299" column="11" declfile="xp/common/gg_io.h" declline="299" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1ga7c3787a69ff8d48c0d037211e4e48c20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__Errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_InputStream_Tell</definition>
        <argsstring>(GG_InputStream *self, GG_Position *offset)</argsstring>
        <name>GG_InputStream_Tell</name>
        <param>
          <type><ref refid="structGG__InputStream" kindref="compound">GG_InputStream</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="group__Types_1ga211487066e746316239c66cea030a31b" kindref="member">GG_Position</ref> *</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current stream position, relative to the start of the stream.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a variable in which the position will be returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__Errors_1ga74ac21a451c08367bf69467eb4756490" kindref="member">GG_SUCCESS</ref> if the operation succeeded, or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="303" column="11" declfile="xp/common/gg_io.h" declline="303" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1ga766b2be66111f59dfd01a512f15dea64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__Errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_InputStream_GetSize</definition>
        <argsstring>(GG_InputStream *self, GG_Position *size)</argsstring>
        <name>GG_InputStream_GetSize</name>
        <param>
          <type><ref refid="structGG__InputStream" kindref="compound">GG_InputStream</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="group__Types_1ga211487066e746316239c66cea030a31b" kindref="member">GG_Position</ref> *</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the size of the stream.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a variable in which the size will be returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__Errors_1ga74ac21a451c08367bf69467eb4756490" kindref="member">GG_SUCCESS</ref> if the operation succeeded, or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="307" column="11" declfile="xp/common/gg_io.h" declline="307" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1gad41a61dea4d7306031a3c288227c7889" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__Errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_InputStream_GetAvailable</definition>
        <argsstring>(GG_InputStream *self, GG_Position *available)</argsstring>
        <name>GG_InputStream_GetAvailable</name>
        <param>
          <type><ref refid="structGG__InputStream" kindref="compound">GG_InputStream</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="group__Types_1ga211487066e746316239c66cea030a31b" kindref="member">GG_Position</ref> *</type>
          <declname>available</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the amount of data that can be read from the stream, from the current position.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>available</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a variable in which the number of bytes available to read will be returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__Errors_1ga74ac21a451c08367bf69467eb4756490" kindref="member">GG_SUCCESS</ref> if the operation succeeded, or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="311" column="11" declfile="xp/common/gg_io.h" declline="311" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1gaed44154b1461b3448cdab758aeff1597" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__Errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_InputStream_ReadLine</definition>
        <argsstring>(GG_InputStream *self, char *line, size_t line_size, size_t *chars_read)</argsstring>
        <name>GG_InputStream_ReadLine</name>
        <param>
          <type><ref refid="structGG__InputStream" kindref="compound">GG_InputStream</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>line</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>line_size</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>chars_read</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read from a stream one line at a time, into a buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer in which the line will be read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chars_read</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a variable in which the number of line characters have been read. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__Errors_1ga74ac21a451c08367bf69467eb4756490" kindref="member">GG_SUCCESS</ref> if a line was read, or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="324" column="11" declfile="xp/common/gg_io.h" declline="324" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1ga95b91546a6e0eeecc713c6d9e2079de1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__Errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_InputStream_ReadLineString</definition>
        <argsstring>(GG_InputStream *self, GG_String *string, size_t max_length)</argsstring>
        <name>GG_InputStream_ReadLineString</name>
        <param>
          <type><ref refid="structGG__InputStream" kindref="compound">GG_InputStream</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="structGG__String" kindref="compound">GG_String</ref> *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read from a stream one line at a time, into a string object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structGG__String" kindref="compound">GG_String</ref> object that will receive the line. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum line size to accept. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__Errors_1ga74ac21a451c08367bf69467eb4756490" kindref="member">GG_SUCCESS</ref> if a line was read, or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="339" column="11" declfile="xp/common/gg_io.h" declline="339" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1ga3c9e3091ffa0d96c4ee8fabbdc060f22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__Errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_InputStream_ReadUI64</definition>
        <argsstring>(GG_InputStream *self, uint64_t *value)</argsstring>
        <name>GG_InputStream_ReadUI64</name>
        <param>
          <type><ref refid="structGG__InputStream" kindref="compound">GG_InputStream</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read a 64-bit integer, in Big Endian byte order.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the variable in which the integer will be stored. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__Errors_1ga74ac21a451c08367bf69467eb4756490" kindref="member">GG_SUCCESS</ref> if a value was read, or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="352" column="11" declfile="xp/common/gg_io.h" declline="352" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1ga00da41fbe64dace4953feeb4a571fe87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__Errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_InputStream_ReadUI32</definition>
        <argsstring>(GG_InputStream *self, uint32_t *value)</argsstring>
        <name>GG_InputStream_ReadUI32</name>
        <param>
          <type><ref refid="structGG__InputStream" kindref="compound">GG_InputStream</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read a 32-bit integer, in Big Endian byte order.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the variable in which the integer will be stored. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__Errors_1ga74ac21a451c08367bf69467eb4756490" kindref="member">GG_SUCCESS</ref> if a value was read, or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="363" column="11" declfile="xp/common/gg_io.h" declline="363" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1ga2a2817d31389d11848b9bed7bcfa9725" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__Errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_InputStream_ReadUI16</definition>
        <argsstring>(GG_InputStream *self, uint16_t *value)</argsstring>
        <name>GG_InputStream_ReadUI16</name>
        <param>
          <type><ref refid="structGG__InputStream" kindref="compound">GG_InputStream</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read a 16-bit integer, in Big Endian byte order.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the variable in which the integer will be stored. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__Errors_1ga74ac21a451c08367bf69467eb4756490" kindref="member">GG_SUCCESS</ref> if a value was read, or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="374" column="11" declfile="xp/common/gg_io.h" declline="374" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1ga0f425b936d820d88e7f69aeb0b39ede5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__Errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_InputStream_ReadFully</definition>
        <argsstring>(GG_InputStream *self, void *buffer, size_t bytes_to_read)</argsstring>
        <name>GG_InputStream_ReadFully</name>
        <param>
          <type><ref refid="structGG__InputStream" kindref="compound">GG_InputStream</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bytes_to_read</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read a fixed amount of data.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer in which the data will be read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bytes_to_read</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to read. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__Errors_1ga74ac21a451c08367bf69467eb4756490" kindref="member">GG_SUCCESS</ref> if exactly bytes_to_read bytes were read, or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="386" column="11" declfile="xp/common/gg_io.h" declline="386" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1gad5ed4b847291dfa293b8df9801d49284" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__Errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_InputStream_Skip</definition>
        <argsstring>(GG_InputStream *self, size_t count)</argsstring>
        <name>GG_InputStream_Skip</name>
        <param>
          <type><ref refid="structGG__InputStream" kindref="compound">GG_InputStream</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Skip some data from the current position.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to skip. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__Errors_1ga74ac21a451c08367bf69467eb4756490" kindref="member">GG_SUCCESS</ref> if the call succeeded, or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="399" column="11" declfile="xp/common/gg_io.h" declline="399" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1ga081e2647a501e95969ce3873951787d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__Errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_InputStream_Load</definition>
        <argsstring>(GG_InputStream *self, size_t max_read, GG_DynamicBuffer **buffer)</argsstring>
        <name>GG_InputStream_Load</name>
        <param>
          <type><ref refid="structGG__InputStream" kindref="compound">GG_InputStream</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_read</declname>
        </param>
        <param>
          <type><ref refid="classGG__DynamicBuffer" kindref="compound">GG_DynamicBuffer</ref> **</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read data into a <ref refid="classGG__DynamicBuffer" kindref="compound">GG_DynamicBuffer</ref> buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_read</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of bytes to read, or 0 to read until the end of the stream. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a variable in which a <ref refid="classGG__DynamicBuffer" kindref="compound">GG_DynamicBuffer</ref> instance will be returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__Errors_1ga74ac21a451c08367bf69467eb4756490" kindref="member">GG_SUCCESS</ref> if the call succeeded, or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="411" column="11" declfile="xp/common/gg_io.h" declline="411" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1gaf2550aa87ab411cb4d246a262ca11408" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structGG__OutputStream" kindref="compound">GG_OutputStream</ref> *</type>
        <definition>GG_OutputStream * GG_OutputStream_Retain</definition>
        <argsstring>(GG_OutputStream *self)</argsstring>
        <name>GG_OutputStream_Retain</name>
        <param>
          <type><ref refid="structGG__OutputStream" kindref="compound">GG_OutputStream</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retain a reference to this object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The retained object (which may or may not be the same pointer as the one on which this method is called). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="487" column="17" declfile="xp/common/gg_io.h" declline="487" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1gaf45bc56d0cc7c366f030fb4a115d0d41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_OutputStream_Release</definition>
        <argsstring>(GG_OutputStream *self)</argsstring>
        <name>GG_OutputStream_Release</name>
        <param>
          <type><ref refid="structGG__OutputStream" kindref="compound">GG_OutputStream</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retain a reference to this object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The retained object (which may or may not be the same pointer as the one on which this method is called). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="491" column="6" declfile="xp/common/gg_io.h" declline="491" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1ga66df410759fe8fadd48bfd2e6385427b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__Errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_OutputStream_Write</definition>
        <argsstring>(GG_OutputStream *self, const void *buffer, size_t bytes_to_write, size_t *bytes_written)</argsstring>
        <name>GG_OutputStream_Write</name>
        <param>
          <type><ref refid="structGG__OutputStream" kindref="compound">GG_OutputStream</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bytes_to_write</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>bytes_written</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write data.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to write. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bytes_to_write</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of bytes to write. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bytes_written</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a variable in which the number of bytes written is returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__Errors_1ga74ac21a451c08367bf69467eb4756490" kindref="member">GG_SUCCESS</ref> if at least one byte could be written, or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="495" column="11" declfile="xp/common/gg_io.h" declline="495" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1ga352f763e38bab40c99688934ef4b8357" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__Errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_OutputStream_Seek</definition>
        <argsstring>(GG_OutputStream *self, GG_Position offset)</argsstring>
        <name>GG_OutputStream_Seek</name>
        <param>
          <type><ref refid="structGG__OutputStream" kindref="compound">GG_OutputStream</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="group__Types_1ga211487066e746316239c66cea030a31b" kindref="member">GG_Position</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change the current stream position, relative to the start of the stream.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Position to which to seek. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__Errors_1ga74ac21a451c08367bf69467eb4756490" kindref="member">GG_SUCCESS</ref> if the operation succeeded, or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="502" column="11" declfile="xp/common/gg_io.h" declline="502" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1ga2384b4b7f211b7763d238c2a51192af5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__Errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_OutputStream_Tell</definition>
        <argsstring>(GG_OutputStream *self, GG_Position *offset)</argsstring>
        <name>GG_OutputStream_Tell</name>
        <param>
          <type><ref refid="structGG__OutputStream" kindref="compound">GG_OutputStream</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="group__Types_1ga211487066e746316239c66cea030a31b" kindref="member">GG_Position</ref> *</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current stream position, relative to the start of the stream.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a variable in which the position will be returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__Errors_1ga74ac21a451c08367bf69467eb4756490" kindref="member">GG_SUCCESS</ref> if the operation succeeded, or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="506" column="11" declfile="xp/common/gg_io.h" declline="506" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1ga8648f2f8394c18944ec8b00c84b03069" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__Errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_OutputStream_Flush</definition>
        <argsstring>(GG_OutputStream *self)</argsstring>
        <name>GG_OutputStream_Flush</name>
        <param>
          <type><ref refid="structGG__OutputStream" kindref="compound">GG_OutputStream</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flush any pending/cached data.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__Errors_1ga74ac21a451c08367bf69467eb4756490" kindref="member">GG_SUCCESS</ref> if the operation succeeded, or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="510" column="11" declfile="xp/common/gg_io.h" declline="510" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1ga719c6da2c619f7e124124a3d41165d4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__Errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_OutputStream_WriteFully</definition>
        <argsstring>(GG_OutputStream *self, const void *buffer, size_t bytes_to_write)</argsstring>
        <name>GG_OutputStream_WriteFully</name>
        <param>
          <type><ref refid="structGG__OutputStream" kindref="compound">GG_OutputStream</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bytes_to_write</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write a fixed amount of data.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to write. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bytes_to_write</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to write. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__Errors_1ga74ac21a451c08367bf69467eb4756490" kindref="member">GG_SUCCESS</ref> if exactly bytes_to_write bytes were written, or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="522" column="11" declfile="xp/common/gg_io.h" declline="522" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1gacfca6708039f104dea0bb0fef340f2ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__Errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_OutputStream_WriteString</definition>
        <argsstring>(GG_OutputStream *self, const char *string)</argsstring>
        <name>GG_OutputStream_WriteString</name>
        <param>
          <type><ref refid="structGG__OutputStream" kindref="compound">GG_OutputStream</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write a NULL-terminated string (the NULL termination is not written).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to write. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__Errors_1ga74ac21a451c08367bf69467eb4756490" kindref="member">GG_SUCCESS</ref> if the entire string was written, or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="535" column="11" declfile="xp/common/gg_io.h" declline="535" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1ga926db9f2bdaad3d27533dd700c2f1cb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__Errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_OutputStream_WriteLine</definition>
        <argsstring>(GG_OutputStream *self, const char *line)</argsstring>
        <name>GG_OutputStream_WriteLine</name>
        <param>
          <type><ref refid="structGG__OutputStream" kindref="compound">GG_OutputStream</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write a NULL-terminated string followed by <computeroutput>\r\n</computeroutput> (the NULL termination is not written).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>The line to write. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__Errors_1ga74ac21a451c08367bf69467eb4756490" kindref="member">GG_SUCCESS</ref> if the entire line was written, or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="546" column="11" declfile="xp/common/gg_io.h" declline="546" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1gaffcbcc514ac2049fd8ebeaa181717a00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__Errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_MemoryStream_Create</definition>
        <argsstring>(size_t size, GG_MemoryStream **stream)</argsstring>
        <name>GG_MemoryStream_Create</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="classGG__MemoryStream" kindref="compound">GG_MemoryStream</ref> **</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new instance of <ref refid="classGG__MemoryStream" kindref="compound">GG_MemoryStream</ref>. The object starts with a data size of 0. Writing to the <ref refid="structGG__OutputStream" kindref="compound">GG_OutputStream</ref> interface will attempt to grow the data buffer held by the object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The initial size of the memory buffer managed by the object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a variable where the object will be returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__Errors_1ga74ac21a451c08367bf69467eb4756490" kindref="member">GG_SUCCESS</ref> if the object could be created, or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="570" column="11" declfile="xp/common/gg_io.h" declline="570" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1gaa5f497a43615055c4d212ab2778b27b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__Errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_MemoryStream_CreateFromBuffer</definition>
        <argsstring>(void *buffer, size_t size, GG_MemoryStream **stream)</argsstring>
        <name>GG_MemoryStream_CreateFromBuffer</name>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="classGG__MemoryStream" kindref="compound">GG_MemoryStream</ref> **</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new instance of <ref refid="classGG__MemoryStream" kindref="compound">GG_MemoryStream</ref>. The object starts with the supplied data, provided as an external buffer, which must remain allocated during the lifetime of this object. Writing to the <ref refid="structGG__OutputStream" kindref="compound">GG_OutputStream</ref> interface will not attempt to grow the data buffer held by the object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to which this object provides a view. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a variable where the object will be returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__Errors_1ga74ac21a451c08367bf69467eb4756490" kindref="member">GG_SUCCESS</ref> if the object could be created, or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="586" column="11" declfile="xp/common/gg_io.h" declline="586" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1gaf80adf9524bb1e7d291dae945957806c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGG__MemoryStream" kindref="compound">GG_MemoryStream</ref> *</type>
        <definition>GG_MemoryStream * GG_MemoryStream_Retain</definition>
        <argsstring>(GG_MemoryStream *self)</argsstring>
        <name>GG_MemoryStream_Retain</name>
        <param>
          <type><ref refid="classGG__MemoryStream" kindref="compound">GG_MemoryStream</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="structGG__InputStreamInterface_1afca5e33c03b3a1005f6b2c3763864ae1" kindref="member">GG_InputStreamInterface::Retain</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="structGG__OutputStreamInterface_1aeb5ae47ed0e34d81a0d56fd798872e85" kindref="member">GG_OutputStreamInterface::Retain</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="595" column="17" declfile="xp/common/gg_io.h" declline="595" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1gab55b313c397831d655265cff78d782b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_MemoryStream_Release</definition>
        <argsstring>(GG_MemoryStream *self)</argsstring>
        <name>GG_MemoryStream_Release</name>
        <param>
          <type><ref refid="classGG__MemoryStream" kindref="compound">GG_MemoryStream</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="structGG__InputStreamInterface_1abe6f42d3484f2d0aea2307bd22d52df9" kindref="member">GG_InputStreamInterface::Release</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="structGG__OutputStreamInterface_1af964ab989a14182702bcf7a03247eebf" kindref="member">GG_OutputStreamInterface::Release</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="602" column="6" declfile="xp/common/gg_io.h" declline="602" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1gacc68c61fa0566a9b9ec3c3036fc83635" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__Errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_MemoryStream_GetBuffer</definition>
        <argsstring>(GG_MemoryStream *self, GG_DynamicBuffer **buffer)</argsstring>
        <name>GG_MemoryStream_GetBuffer</name>
        <param>
          <type><ref refid="classGG__MemoryStream" kindref="compound">GG_MemoryStream</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classGG__DynamicBuffer" kindref="compound">GG_DynamicBuffer</ref> **</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Obtain the internal <ref refid="classGG__DynamicBuffer" kindref="compound">GG_DynamicBuffer</ref> object that represents the data managed by this object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a variable where the internal buffer object will be returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__Errors_1ga74ac21a451c08367bf69467eb4756490" kindref="member">GG_SUCCESS</ref> if the call succeeded, or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="613" column="11" declfile="xp/common/gg_io.h" declline="613" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1ga93aae2221b4c3d198c397cbce518c988" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__Errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_MemoryStream_GetInputStream</definition>
        <argsstring>(GG_MemoryStream *self, GG_InputStream **stream)</argsstring>
        <name>GG_MemoryStream_GetInputStream</name>
        <param>
          <type><ref refid="classGG__MemoryStream" kindref="compound">GG_MemoryStream</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="structGG__InputStream" kindref="compound">GG_InputStream</ref> **</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Obtain the <ref refid="structGG__InputStream" kindref="compound">GG_InputStream</ref> interface for this object. NOTE: the caller must call GG_InputStream_Release on the interface obtained from this call when it is done with it.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a variable where the <ref refid="structGG__InputStream" kindref="compound">GG_InputStream</ref> interface will be returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__Errors_1ga74ac21a451c08367bf69467eb4756490" kindref="member">GG_SUCCESS</ref> if the call succeeded, or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="626" column="11" declfile="xp/common/gg_io.h" declline="626" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__InputOutput_1gaf488b1cf1a2caa88e53e49fcfac0bf51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__Errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_MemoryStream_GetOutputStream</definition>
        <argsstring>(GG_MemoryStream *self, GG_OutputStream **stream)</argsstring>
        <name>GG_MemoryStream_GetOutputStream</name>
        <param>
          <type><ref refid="classGG__MemoryStream" kindref="compound">GG_MemoryStream</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="structGG__OutputStream" kindref="compound">GG_OutputStream</ref> **</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Obtain the <ref refid="structGG__OutputStream" kindref="compound">GG_OutputStream</ref> interface for this object. NOTE: the caller must call GG_OutputStream_Release on the interface obtained from this call when it is done with it.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a variable where the <ref refid="structGG__OutputStream" kindref="compound">GG_OutputStream</ref> interface will be returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__Errors_1ga74ac21a451c08367bf69467eb4756490" kindref="member">GG_SUCCESS</ref> if the call succeeded, or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="639" column="11" declfile="xp/common/gg_io.h" declline="639" declcolumn="11"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__InputOutput_1ga03f933b21bb40e344d742979c4b217a4" prot="public" static="no">
        <name>GG_ERROR_EOS</name>
        <initializer>(<ref refid="group__Errors_1gaece26aab8fba5241bec75750f339634c" kindref="member">GG_ERROR_BASE_IO</ref> - 0)</initializer>
        <briefdescription>
<para>End Of Stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="35" column="9" bodyfile="xp/common/gg_io.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__InputOutput_1ga2751ad0311395f3a3c156c2755985c8b" prot="public" static="no">
        <name>GG_BUFFER_METADATA_TYPE_NONE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="52" column="9" bodyfile="xp/common/gg_io.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__InputOutput_1ga670b59e68a9edb94aec0e9ddf058769b" prot="public" static="no">
        <name>GG_BUFFER_METADATA_INITIALIZER</name>
        <param><defname>_type_id</defname></param>
        <param><defname>_c_type</defname></param>
        <initializer>((<ref refid="structGG__BufferMetadata" kindref="compound">GG_BufferMetadata</ref>){                                     \
    .type = GG_BUFFER_METADATA_TYPE_##_type_id,           \
    .size = sizeof(_c_type)                               \
})</initializer>
        <briefdescription>
<para>Initialize a <ref refid="structGG__BufferMetadata" kindref="compound">GG_BufferMetadata</ref> struct given its type ID and C type. </para>
        </briefdescription>
        <detaileddescription>
<para>The type ID passed here is the tail of the C constant name for the type ID that follows the GG_BUFFER_METADATA_TYPE_ prefix. So for example, to initialize a metadata struct that has the C type FooBar and the type ID constant GG_BUFFER_METADATA_TYPE_FOOBAR, you would use <ref refid="group__InputOutput_1ga670b59e68a9edb94aec0e9ddf058769b" kindref="member">GG_BUFFER_METADATA_INITIALIZER(FOOBAR, Foobar)</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_io.h" line="67" column="9" bodyfile="xp/common/gg_io.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>General Purpose I/O Interfaces, Classes and Functions </para>
    </detaileddescription>
  </compounddef>
</doxygen>
